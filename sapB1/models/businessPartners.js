const BPAccountReceivablePayble = require("./complex/BPAccountReceivablePayble");
const BPAddress = require("./complex/BPAddress");
const BPBankAccount = require("./complex/BPBankAccount");
const BPBlockSendingMarketingContent = require("./complex/BPBlockSendingMarketingContent");
const BPBranchAssignmentItem = require("./complex/BPBranchAssignmentItem");
const BPFiscalTaxID = require("./complex/BPFiscalTaxID");
const BPIntrastatExtension = require("./complex/BPIntrastatExtension");
const BPPaymentDate = require("./complex/BPPaymentDate");
const BPPaymentMethod = require("./complex/BPPaymentMethod");
const BPWithholdingTax = require("./complex/BPWithholdingTax");
const ContactEmployee = require("./complex/ContactEmployee");
const DiscountGroup = require("./complex/DiscountGroup");


class BusinessPartners {
    constructor() {
        this.sapObjectName = 'BusinessPartners';
        this.CardCode = new String();
        this.CardName = new String();
        this.CardType = new String();
        this.GroupCode = new Number();
        this.Address = new String();
        this.ZipCode = new String();
        this.MailAddress = new String();
        this.MailZipCode = new String();
        this.Phone1 = new String();
        this.Phone2 = new String();
        this.Fax = new String();
        this.ContactPerson = new String();
        this.Notes = new String();
        this.PayTermsGrpCode = new Number();
        this.CreditLimit = new Number();
        this.MaxCommitment = new Number();
        this.DiscountPercent = new Number();
        this.VatLiable = new String();
        this.FederalTaxID = new String();
        this.DeductibleAtSource = new String();
        this.DeductionPercent = new Number();
        this.DeductionValidUntil = new String();
        this.PriceListNum = new Number();
        this.IntrestRatePercent = new Number();
        this.CommissionPercent = new Number();
        this.CommissionGroupCode = new Number();
        this.FreeText = new String();
        this.SalesPersonCode = new Number();
        this.Currency = new String();
        this.RateDiffAccount = new String();
        this.Cellular = new String();
        this.AvarageLate = new Number();
        this.City = new String();
        this.County = new String();
        this.Country = new String();
        this.MailCity = new String();
        this.MailCounty = new String();
        this.MailCountry = new String();
        this.EmailAddress = new String();
        this.Picture = new String();
        this.DefaultAccount = new String();
        this.DefaultBranch = new String();
        this.DefaultBankCode = new String();
        this.AdditionalID = new String();
        this.Pager = new String();
        this.FatherCard = new String();
        this.CardForeignName = new String();
        this.FatherType = new String();
        this.DeductionOffice = new String();
        this.ExportCode = new String();
        this.MinIntrest = new Number();
        this.CurrentAccountBalance = new Number();
        this.OpenDeliveryNotesBalance = new Number();
        this.OpenOrdersBalance = new Number();
        this.VatGroup = new String();
        this.ShippingType = new Number();
        this.Password = new String();
        this.Indicator = new String();
        this.IBAN = new String();
        this.CreditCardCode = new Number();
        this.CreditCardNum = new String();
        this.CreditCardExpiration = new String();
        this.DebitorAccount = new String();
        this.OpenOpportunities = new Number();
        this.Valid = new String();
        this.ValidFrom = new String();
        this.ValidTo = new String();
        this.ValidRemarks = new String();
        this.Frozen = new String();
        this.FrozenFrom = new String();
        this.FrozenTo = new String();
        this.FrozenRemarks = new String();
        this.Block = new String();
        this.BillToState = new String();
        this.ShipToState = new String();
        this.ExemptNum = new String();
        this.Priority = new Number();
        this.FormCode1099 = new Number();
        this.Box1099 = new String();
        this.PeymentMethodCode = new String();
        this.BackOrder = new String();
        this.PartialDelivery = new String();
        this.BlockDunning = new String();
        this.BankCountry = new String();
        this.HouseBank = new String();
        this.HouseBankCountry = new String();
        this.HouseBankAccount = new String();
        this.ShipToDefault = new String();
        this.DunningLevel = new Number();
        this.DunningDate = new String();
        this.CollectionAuthorization = new String();
        this.DME = new String();
        this.InstructionKey = new String();
        this.SinglePayment = new String();
        this.ISRBillerID = new String();
        this.PaymentBlock = new String();
        this.ReferenceDetails = new String();
        this.HouseBankBranch = new String();
        this.OwnerIDNumber = new String();
        this.PaymentBlockDescription = new Number();
        this.TaxExemptionLetterNum = new String();
        this.MaxAmountOfExemption = new Number();
        this.ExemptionValidityDateFrom = new String();
        this.ExemptionValidityDateTo = new String();
        this.LinkedBusinessPartner = new String();
        this.LastMultiReconciliationNum = new Number();
        this.DeferredTax = new String();
        this.Equalization = new String();
        this.SubjectToWithholdingTax = new String();
        this.CertificateNumber = new String();
        this.ExpirationDate = new String();
        this.NationalInsuranceNum = new String();
        this.AccrualCriteria = new String();
        this.WTCode = new String();
        this.BillToBuildingFloorRoom = new String();
        this.DownPaymentClearAct = new String();
        this.ChannelBP = new String();
        this.DefaultTechnician = new Number();
        this.BilltoDefault = new String();
        this.CustomerBillofExchangDisc = new String();
        this.Territory = new Number();
        this.ShipToBuildingFloorRoom = new String();
        this.CustomerBillofExchangPres = new String();
        this.ProjectCode = new String();
        this.VatGroupLatinAmerica = new String();
        this.DunningTerm = new String();
        this.Website = new String();
        this.OtherReceivablePayable = new String();
        this.BillofExchangeonCollection = new String();
        this.CompanyPrivate = new String();
        this.LanguageCode = new Number();
        this.UnpaidBillofExchange = new String();
        this.WithholdingTaxDeductionGroup = new Number();
        this.ClosingDateProcedureNumber = new Number();
        this.Profession = new String();
        this.BankChargesAllocationCode = new String();
        this.TaxRoundingRule = new String();
        this.Properties1 = new String();
        this.Properties2 = new String();
        this.Properties3 = new String();
        this.Properties4 = new String();
        this.Properties5 = new String();
        this.Properties6 = new String();
        this.Properties7 = new String();
        this.Properties8 = new String();
        this.Properties9 = new String();
        this.Properties10 = new String();
        this.Properties11 = new String();
        this.Properties12 = new String();
        this.Properties13 = new String();
        this.Properties14 = new String();
        this.Properties15 = new String();
        this.Properties16 = new String();
        this.Properties17 = new String();
        this.Properties18 = new String();
        this.Properties19 = new String();
        this.Properties20 = new String();
        this.Properties21 = new String();
        this.Properties22 = new String();
        this.Properties23 = new String();
        this.Properties24 = new String();
        this.Properties25 = new String();
        this.Properties26 = new String();
        this.Properties27 = new String();
        this.Properties28 = new String();
        this.Properties29 = new String();
        this.Properties30 = new String();
        this.Properties31 = new String();
        this.Properties32 = new String();
        this.Properties33 = new String();
        this.Properties34 = new String();
        this.Properties35 = new String();
        this.Properties36 = new String();
        this.Properties37 = new String();
        this.Properties38 = new String();
        this.Properties39 = new String();
        this.Properties40 = new String();
        this.Properties41 = new String();
        this.Properties42 = new String();
        this.Properties43 = new String();
        this.Properties44 = new String();
        this.Properties45 = new String();
        this.Properties46 = new String();
        this.Properties47 = new String();
        this.Properties48 = new String();
        this.Properties49 = new String();
        this.Properties50 = new String();
        this.Properties51 = new String();
        this.Properties52 = new String();
        this.Properties53 = new String();
        this.Properties54 = new String();
        this.Properties55 = new String();
        this.Properties56 = new String();
        this.Properties57 = new String();
        this.Properties58 = new String();
        this.Properties59 = new String();
        this.Properties60 = new String();
        this.Properties61 = new String();
        this.Properties62 = new String();
        this.Properties63 = new String();
        this.Properties64 = new String();
        this.CompanyRegistrationNumber = new String();
        this.VerificationNumber = new String();
        this.DiscountBaseObject = new String();
        this.DiscountRelations = new String();
        this.TypeReport = new String();
        this.ThresholdOverlook = new String();
        this.SurchargeOverlook = new String();
        this.DownPaymentInterimAccount = new String();
        this.OperationCode347 = new String();
        this.InsuranceOperation347 = new String();
        this.HierarchicalDeduction = new String();
        this.ShaamGroup = new String();
        this.WithholdingTaxCertified = new String();
        this.BookkeepingCertified = new String();
        this.PlanningGroup = new String();
        this.Affiliate = new String();
        this.Industry = new Number();
        this.VatIDNum = new String();
        this.DatevAccount = new String();
        this.DatevFirstDataEntry = new String();
        this.UseShippedGoodsAccount = new String();
        this.GTSRegNo = new String();
        this.GTSBankAccountNo = new String();
        this.GTSBillingAddrTel = new String();
        this.ETaxWebSite = new Number();
        this.HouseBankIBAN = new String();
        this.VATRegistrationNumber = new String();
        this.RepresentativeName = new String();
        this.IndustryType = new String();
        this.BusinessType = new String();
        this.Series = new Number();
        this.AutomaticPosting = new String();
        this.InterestAccount = new String();
        this.FeeAccount = new String();
        this.CampaignNumber = new Number();
        this.AliasName = new String();
        this.DefaultBlanketAgreementNumber = new Number();
        this.EffectiveDiscount = new String();
        this.NoDiscounts = new String();
        this.EffectivePrice = new String();
        this.GlobalLocationNumber = new String();
        this.EDISenderID = new String();
        this.EDIRecipientID = new String();
        this.ResidenNumber = new String();
        this.RelationshipCode = new String();
        this.RelationshipDateFrom = new String();
        this.RelationshipDateTill = new String();
        this.UnifiedFederalTaxID = new String();
        this.AttachmentEntry = new Number();
        this.TypeOfOperation = new String();
        this.EndorsableChecksFromBP = new String();
        this.AcceptsEndorsedChecks = new String();
        this.OwnerCode = new Number();
        this.BlockSendingMarketingContent = new String();
        this.AgentCode = new String();
        this.PriceMode = new String();
        this.EDocGenerationType = new String();
        this.EDocStreet = new String();
        this.EDocStreetNumber = new String();
        this.EDocBuildingNumber = new Number();
        this.EDocZipCode = new String();
        this.EDocCity = new String();
        this.EDocCountry = new String();
        this.EDocDistrict = new String();
        this.EDocRepresentativeFirstName = new String();
        this.EDocRepresentativeSurname = new String();
        this.EDocRepresentativeCompany = new String();
        this.EDocRepresentativeFiscalCode = new String();
        this.EDocRepresentativeAdditionalId = new String();
        this.EDocPECAddress = new String();
        this.IPACodeForPA = new String();
        this.UpdateDate = new String();
        this.UpdateTime = new String();
        this.ExemptionMaxAmountValidationType = new String();
        this.ECommerceMerchantID = new String();
        this.UseBillToAddrToDetermineTax = new String();
        this.CreateDate = new String();
        this.CreateTime = new String();
        this.DefaultTransporterEntry = new Number();
        this.DefaultTransporterLineNumber = new Number();
        this.FCERelevant = new String();
        this.U_F1 = new String();
        this.BPAddresses = [BPAddress];
        this.ContactEmployees = [ContactEmployee];
        this.BPAccountReceivablePaybleCollection = [BPAccountReceivablePayble];
        this.BPPaymentMethods = [BPPaymentMethod];
        this.BPWithholdingTaxCollection = [BPWithholdingTax];
        this.BPPaymentDates = [BPPaymentDate];
        this.BPBranchAssignment = [BPBranchAssignmentItem];
        this.BPBankAccounts = [BPBankAccount];
        this.BPFiscalTaxIDCollection = [BPFiscalTaxID];
        this.DiscountGroups = [DiscountGroup];
        this.BPIntrastatExtension = new BPIntrastatExtension();
        this.BPBlockSendingMarketingContents = [BPBlockSendingMarketingContent];
    }
    CardCode;
    CardName;
    CardType;
    GroupCode;
    Address;
    ZipCode;
    MailAddress;
    MailZipCode;
    Phone1;
    Phone2;
    Fax;
    ContactPerson;
    Notes;
    PayTermsGrpCode;
    CreditLimit;
    MaxCommitment;
    DiscountPercent;
    VatLiable;
    FederalTaxID;
    DeductibleAtSource;
    DeductionPercent;
    DeductionValidUntil;
    PriceListNum;
    IntrestRatePercent;
    CommissionPercent;
    CommissionGroupCode;
    FreeText;
    SalesPersonCode;
    Currency;
    RateDiffAccount;
    Cellular;
    AvarageLate;
    City;
    County;
    Country;
    MailCity;
    MailCounty;
    MailCountry;
    EmailAddress;
    Picture;
    DefaultAccount;
    DefaultBranch;
    DefaultBankCode;
    AdditionalID;
    Pager;
    FatherCard;
    CardForeignName;
    FatherType;
    DeductionOffice;
    ExportCode;
    MinIntrest;
    CurrentAccountBalance;
    OpenDeliveryNotesBalance;
    OpenOrdersBalance;
    VatGroup;
    ShippingType;
    Password;
    Indicator;
    IBAN;
    CreditCardCode;
    CreditCardNum;
    CreditCardExpiration;
    DebitorAccount;
    OpenOpportunities;
    Valid;
    ValidFrom;
    ValidTo;
    ValidRemarks;
    Frozen;
    FrozenFrom;
    FrozenTo;
    FrozenRemarks;
    Block;
    BillToState;
    ShipToState;
    ExemptNum;
    Priority;
    FormCode1099;
    Box1099;
    PeymentMethodCode;
    BackOrder;
    PartialDelivery;
    BlockDunning;
    BankCountry;
    HouseBank;
    HouseBankCountry;
    HouseBankAccount;
    ShipToDefault;
    DunningLevel;
    DunningDate;
    CollectionAuthorization;
    DME;
    InstructionKey;
    SinglePayment;
    ISRBillerID;
    PaymentBlock;
    ReferenceDetails;
    HouseBankBranch;
    OwnerIDNumber;
    PaymentBlockDescription;
    TaxExemptionLetterNum;
    MaxAmountOfExemption;
    ExemptionValidityDateFrom;
    ExemptionValidityDateTo;
    LinkedBusinessPartner;
    LastMultiReconciliationNum;
    DeferredTax;
    Equalization;
    SubjectToWithholdingTax;
    CertificateNumber;
    ExpirationDate;
    NationalInsuranceNum;
    AccrualCriteria;
    WTCode;
    BillToBuildingFloorRoom;
    DownPaymentClearAct;
    ChannelBP;
    DefaultTechnician;
    BilltoDefault;
    CustomerBillofExchangDisc;
    Territory;
    ShipToBuildingFloorRoom;
    CustomerBillofExchangPres;
    ProjectCode;
    VatGroupLatinAmerica;
    DunningTerm;
    Website;
    OtherReceivablePayable;
    BillofExchangeonCollection;
    CompanyPrivate;
    LanguageCode;
    UnpaidBillofExchange;
    WithholdingTaxDeductionGroup;
    ClosingDateProcedureNumber;
    Profession;
    BankChargesAllocationCode;
    TaxRoundingRule;
    Properties1;
    Properties2;
    Properties3;
    Properties4;
    Properties5;
    Properties6;
    Properties7;
    Properties8;
    Properties9;
    Properties10;
    Properties11;
    Properties12;
    Properties13;
    Properties14;
    Properties15;
    Properties16;
    Properties17;
    Properties18;
    Properties19;
    Properties20;
    Properties21;
    Properties22;
    Properties23;
    Properties24;
    Properties25;
    Properties26;
    Properties27;
    Properties28;
    Properties29;
    Properties30;
    Properties31;
    Properties32;
    Properties33;
    Properties34;
    Properties35;
    Properties36;
    Properties37;
    Properties38;
    Properties39;
    Properties40;
    Properties41;
    Properties42;
    Properties43;
    Properties44;
    Properties45;
    Properties46;
    Properties47;
    Properties48;
    Properties49;
    Properties50;
    Properties51;
    Properties52;
    Properties53;
    Properties54;
    Properties55;
    Properties56;
    Properties57;
    Properties58;
    Properties59;
    Properties60;
    Properties61;
    Properties62;
    Properties63;
    Properties64;
    CompanyRegistrationNumber;
    VerificationNumber;
    DiscountBaseObject;
    DiscountRelations;
    TypeReport;
    ThresholdOverlook;
    SurchargeOverlook;
    DownPaymentInterimAccount;
    OperationCode347;
    InsuranceOperation347;
    HierarchicalDeduction;
    ShaamGroup;
    WithholdingTaxCertified;
    BookkeepingCertified;
    PlanningGroup;
    Affiliate;
    Industry;
    VatIDNum;
    DatevAccount;
    DatevFirstDataEntry;
    UseShippedGoodsAccount;
    GTSRegNo;
    GTSBankAccountNo;
    GTSBillingAddrTel;
    ETaxWebSite;
    HouseBankIBAN;
    VATRegistrationNumber;
    RepresentativeName;
    IndustryType;
    BusinessType;
    Series;
    AutomaticPosting;
    InterestAccount;
    FeeAccount;
    CampaignNumber;
    AliasName;
    DefaultBlanketAgreementNumber;
    EffectiveDiscount;
    NoDiscounts;
    EffectivePrice;
    GlobalLocationNumber;
    EDISenderID;
    EDIRecipientID;
    ResidenNumber;
    RelationshipCode;
    RelationshipDateFrom;
    RelationshipDateTill;
    UnifiedFederalTaxID;
    AttachmentEntry;
    TypeOfOperation;
    EndorsableChecksFromBP;
    AcceptsEndorsedChecks;
    OwnerCode;
    BlockSendingMarketingContent;
    AgentCode;
    PriceMode;
    EDocGenerationType;
    EDocStreet;
    EDocStreetNumber;
    EDocBuildingNumber;
    EDocZipCode;
    EDocCity;
    EDocCountry;
    EDocDistrict;
    EDocRepresentativeFirstName;
    EDocRepresentativeSurname;
    EDocRepresentativeCompany;
    EDocRepresentativeFiscalCode;
    EDocRepresentativeAdditionalId;
    EDocPECAddress;
    IPACodeForPA;
    UpdateDate;
    UpdateTime;
    ExemptionMaxAmountValidationType;
    ECommerceMerchantID;
    UseBillToAddrToDetermineTax;
    CreateDate;
    CreateTime;
    DefaultTransporterEntry;
    DefaultTransporterLineNumber;
    FCERelevant;
    U_F1;
    BPAddresses;
    ContactEmployees;
    BPAccountReceivablePaybleCollection;
    BPPaymentMethods;
    BPWithholdingTaxCollection;
    BPPaymentDates;
    BPBranchAssignment;
    BPBankAccounts;
    BPFiscalTaxIDCollection;
    DiscountGroups;
    BPIntrastatExtension;
    BPBlockSendingMarketingContents;


}

module.exports = BusinessPartners;

